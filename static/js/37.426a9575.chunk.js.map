{"version":3,"file":"static/js/37.426a9575.chunk.js","mappings":"2SACA,GAAgB,KAAO,oB,SCmEvB,EA5Da,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IAEbI,EAAAA,EAAAA,IAAkBH,GACfI,MAAK,YAAe,IAAZR,EAAW,EAAXA,KACPA,EAAKS,KAAI,kBAAiD,CACxDC,UADO,EAAGA,UAEVC,cAFO,EAAcA,cAGrBC,aAHO,EAA6BA,aAA7B,IAMTX,EAAQD,EACT,IACAa,OAAM,SAAAC,GAAK,OAAIC,EAAAA,GAAAA,MAAYD,EAAME,QAAS,wBAA/B,IACXC,SAAQ,kBAAMd,GAAa,EAAnB,GACZ,GAAE,CAACC,KAGF,gBAAKc,UAAWC,EAAAA,QAAhB,UACE,qBAASD,UAAWC,EAAAA,UAApB,UACGnB,GAAQA,EAAKoB,OAAS,GACrB,eAAIF,UAAWC,EAAAA,YAAf,gBACGnB,QADH,IACGA,OADH,EACGA,EAAMS,KAAI,WAA6CY,GAAW,IAArDX,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,aACtC,OACE,gBAAIM,UAAWC,EAAAA,YAAf,WACE,gBACED,UAAWC,EAAAA,WACXG,IACEV,EAAY,yCAC0BA,GAClCW,EAENC,IAAKb,KAEP,iBAAKO,UAAWC,EAAAA,WAAhB,WACE,cAAGD,UAAWC,EAAAA,YAAd,SAAgCR,KAChC,eAAGO,UAAWC,EAAAA,iBAAd,UAAoC,aACvBT,UAboBW,EAkBxC,OAGH,cAAGH,UAAWC,EAAAA,WAAd,SAA8B,mBAE/BjB,IAAa,SAACuB,EAAA,EAAD,QAIrB,C,mMChEM,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IACrB,4FAFG,cACCC,EADD,yBAKEA,EAASC,MALX,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBJ,EAAAA,EAAAA,IAAA,0DAC8BI,EAD9B,wFADlB,cACCH,EADD,yBAKEA,EAASC,MALX,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,6DADlB,cACCL,EADD,yBAKEA,EAASC,MALX,kEAQA,SAAetB,EAAtB,+CAAO,OAAP,oBAAO,WAAiC0B,GAAjC,uFACkBN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,qEADlB,cACCL,EADD,yBAKEA,EAASC,MALX,kEAQA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACkBN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,4EADlB,cACCL,EADD,yBAKEA,EAASC,MALX,kE","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/apiMovie.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { MovieCreditsFetch } from 'services/apiMovie';\nimport Loader from 'components/Loader/Loader';\nimport fotoAlternate from 'components/images/not-found.png';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n  // const id = params.movieId;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    MovieCreditsFetch(movieId)\n      .then(({ cast }) => {\n        cast.map(({ character, original_name, profile_path }) => ({\n          character,\n          original_name,\n          profile_path,\n        }));\n\n        setCast(cast);\n      })\n      .catch(error => toast.error(error.message, 'Something went wrong!'))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <div className={css.wrapper}>\n      <section className={css.container}>\n        {cast && cast.length > 0 ? (\n          <ul className={css.actor__list}>\n            {cast?.map(({ character, original_name, profile_path }, index) => {\n              return (\n                <li className={css.actor__item} key={index}>\n                  <img\n                    className={css.foto_actor}\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w300${profile_path}`\n                        : fotoAlternate\n                    }\n                    alt={original_name}\n                  />\n                  <div className={css.actor__box}>\n                    <p className={css.actor__name}>{original_name}</p>\n                    <p className={css.actor__character}>\n                      Character:{character}\n                    </p>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <p className={css.span__text}>Cast not found</p>\n        )}\n        {isLoading && <Loader />}\n      </section>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nexport async function TrendMoviesFetch() {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=3146c777d7ac16a246449915cf00b285'\n  );\n\n  return response.data;\n}\n\nexport async function SearchMoviesFetch(query) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=3146c777d7ac16a246449915cf00b285&language=en-US&page=1&include_adult=false`\n  );\n\n  return response.data;\n}\n\nexport async function MovieDetalisFetch(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=3146c777d7ac16a246449915cf00b285&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function MovieCreditsFetch(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=3146c777d7ac16a246449915cf00b285&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function MovieReviewsFetch(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=3146c777d7ac16a246449915cf00b285&language=en-US&page=1`\n  );\n\n  return response.data;\n}\n"],"names":["useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","MovieCreditsFetch","then","map","character","original_name","profile_path","catch","error","toast","message","finally","className","css","length","index","src","fotoAlternate","alt","Loader","TrendMoviesFetch","axios","response","data","SearchMoviesFetch","query","MovieDetalisFetch","id","MovieReviewsFetch"],"sourceRoot":""}